spring.application.name=security-cam
spring.jpa.properties.hibernate.globally_quoted_identifiers=false

spring.datasource.url= jdbc:h2:/var/security-cam/db/prodDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
####### jdbc:h2:mem:registration_02;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
################### Hibernate Configuration ##########################
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update

spring-security.enabled=false

# spring.autoconfigure.exclude[0]=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
# spring.autoconfigure.exclude[1]=org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

app.camerasHomeDirectory=/var/security-cam
app.appHomeDirectory=/etc/security-cam
app.recordingsHomeDirectory=/var/security-cam
app.myipFileLocation=/var/security-cam/myip
app.logLevel=DEBUG

# spring.main.banner-mode=off

# logging.level.web=ERROR
# spring.mvc.view.prefix=/WEB-INF/jsp/
# spring.mvc.view.suffix=.jsp

logging.file.name=logs/app.log

#The filename pattern used to create log archives.
logging.logback.rollingpolicy.file-name-pattern=logs/%d{yyyy-MM, aux}/app.%d{yyyy-MM-dd}.%i.log

#The maximum size of log file before it is archived.
logging.logback.rollingpolicy.max-file-size=100MB

#The maximum amount of size log archives can take before being deleted.
logging.logback.rollingpolicy.total-size-cap=10GB

#The maximum number of archive log files to keep (defaults to 7).
logging.logback.rollingpolicy.max-history=10
