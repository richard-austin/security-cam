plugins {
    id 'groovy'
    id 'war'
    id "org.springframework.boot" version "3.3.4"
    id 'io.spring.dependency-management' version '1.1.6'
//    id("com.github.erdi.webdriver-binaries") version "3.2"
}

group = "server"
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://build.shibboleth.net/maven/releases/")  // For implementation group: 'org.opensaml', name: 'opensaml-xacml-impl', version: '4.3.0'
        //  url = uri("https://company/com/maven2")
    }
}

springBoot {
    mainClass.set("com.securitycam.ServerApplication")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.groovy:groovy'
    implementation group: 'org.apache.groovy', name: 'groovy-json', version: '4.0.23'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.2'
    implementation 'org.projectlombok:lombok:1.18.34'

    implementation project(':onvif-java')
    implementation project(":onvif-ws-client")

    implementation 'com.h2database:h2:2.2.224'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.security:spring-security-core:6.4.2'
    implementation 'org.springframework.security:spring-security-web:6.4.2'
    implementation 'org.springframework.security:spring-security-config:6.4.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
    implementation 'org.springframework.security:spring-security-crypto:6.4.2'
    implementation group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version: '1.0.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:3.3.2'
    implementation 'io.netty:netty-all:4.1.116.Final'
    implementation 'javax.sdp:nist-sdp:1.0'
    implementation 'com.google.code.gson:gson:2.10'

    implementation (group: 'org.eclipse.angus', name: 'angus-mail', version: '2.0.3')
    implementation group: 'jakarta.mail', name: 'jakarta.mail-api', version: '2.1.3'

    // Onvif dependencies
    compileOnly "org.apache.cxf:cxf-rt-transports-http-jetty:${project.property('cxfVersion')}"

    // Required for cxf version 4.0.5
//    compileOnly 'org.checkerframework:checker-qual:3.48.2'
//    compileOnly 'com.google.errorprone:error_prone_annotations:2.36.0'
//    compileOnly 'com.google.j2objc:j2objc-annotations:3.0.0'

    // There is a version 4.0.3, but 3.0.1 is referenced by org.apache.cxf.services.wsn:cxf-services-wsn-core:4.0.0 internally. It seems that the jakarta web app
    //  fleet has not yet been fully brought up to version 4
    compileOnly 'jakarta.jws:jakarta.jws-api:3.0.0'
    compileOnly group: 'jakarta.xml.ws', name: 'jakarta.xml.ws-api', version: '4.0.2'

    compileOnly 'org.glassfish.hk2:osgi-resource-locator:2.4.0'

    implementation 'org.jetbrains:annotations:24.1.0'

    compileOnly group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.10'
    implementation 'commons-io:commons-io:2.14.0'
    implementation 'org.apache.activemq:activemq-broker:6.1.4'

    // Updated to fix the older version (2.2.3) breaking email
    implementation group: 'org.apache.wss4j', name: 'wss4j-ws-security-common', version: '3.0.4'
    implementation group: 'org.opensaml', name: 'opensaml-xacml-impl', version: '4.3.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
}

bootRun {
    jvmArgs('-Dspring.profiles.active=dev')
}

tasks.named('test') {
    useJUnitPlatform()
}

bootWar.dependsOn([':client:buildClient', ':server:setVersion'])
clean.dependsOn([':onvif-java:clean'])

bootWar {
    webInf {
        from('../client/dist/client/browser')
        include '**/*'
        into('classes/static')
    }
}

tasks.register('setVersion', Exec) {
    mustRunAfter(':server:compileJava')
    group = 'build'
    description = 'Sets the version.txt file with the current version from git describe'
    workingDir "$projectDir"
    executable "sh"
    args = ['-c', 'git describe --tags --dirty | tr -d \'\\n\' > src/main/resources/version.txt']
}

tasks.register('buildDebFile', Exec) {
    group='build'
    dependsOn([':server:bootWar', ':generateProductKey:uberJar', ':fmp4-ws-media-server:deploy', ':initialAdmin:buildWar'])
    group = 'build'
    workingDir "$projectDir/../xtrn-scripts-and-config/deb-file-creation"
    commandLine './create-deb.sh'
}


//tasks.withType(War).configureEach {
//    duplicatesStrategy = DuplicatesStrategy.INCLUDE
//}

tasks.withType(GroovyCompile).configureEach {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

//webdriverBinaries {
//    chromedriver {
//        versionRegexp = '.*'  // Use latest version
//    }
//
//    geckodriver '0.24.0'
//    edgedriver '86.0.601.0'
//}

tasks.withType(Test).configureEach {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
//    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
//    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

description = 'server'
//assets {
//    minifyJs = true
//    minifyCss = true
//}
