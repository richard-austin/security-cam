---
grails:
  profile: web
  codegen:
    defaultPackage: server
  gorm:
    reactor:
      # Whether to translate GORM events into Reactor events
      # Disabled by default for performance reasons
      events: false
info:
  app:
    applicationName: 'Security Cam'
    securityCamVersion: '1'
    grailsVersion: '5.0.0'
spring:
  jmx:
    unique-names: true
  main:
    banner-mode: "off"
  groovy:
    template:
      check-template-location: false
  devtools:
    restart:
      additional-exclude:
        - '*.gsp'
        - '**/*.gsp'
        - '*.gson'
        - '**/*.gson'
        - 'logback.groovy'
        - '*.properties'
management:
  endpoints:
    enabled-by-default: false

---
grails:
  resources:
    pattern: /**   # Needed to make static resources (Angular) accessible from public directory
    #  Without this, static resources are available at <baseurl>/static/**

  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
        - text/html
        - application/xhtml+xml
      js: text/javascript
      json:
        - application/json
        - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml
  urlmapping:
    cache:
      maxsize: 1000
  controllers:
    defaultScope: singleton
    upload:
      maxFileSize: 5242880
      maxRequestSize: 5242880
  converters:
    encoding: UTF-8
  views:
    default:
      codec: html
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
spring:
  jmx:
    unique-names: true
---
hibernate:
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false
dataSource:
  pooled: true
  jmxExport: true
  driverClassName: org.h2.Driver
  username: sa
  password: ''

environments:
  development:
    grails:
      plugin:
        springsecurity:
          active: false  # Set to false for direct development access, or true to access via Cloud server
      cors:
        enabled: true

    dataSource:
      dbCreate: create-drop
      url: jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE

    camerasHomeDirectory: /var/security-cam
    recordingsHomeDirectory: /var/security-cam
    myipFileLocation: /var/security-cam/myip
    logLevel: DEBUG

    motion:
      configDir: /var/security-cam/motion/conf.d
      maskFileDir: /var/security-cam/motion
      recordingDir: /var/security-cam

    cloudProxy:
      enabled: true
      mqTrustStorePath: ../xtrn-scripts-and-config/client.ts
      mqKeyStorePath: ../xtrn-scripts-and-config/client.ks
      mqTrustStorePassword: CIdERVERiMPLetORThrONVAce
      mqKeyStorePassword: ExPEThINdAvAmpROteRCLEyfI
      mqUser: cloud
      mqPassword: inelESOLsiONgeOuShEFatIns
      productKeyPath: /etc/security-cam/prodKey
      cloudActiveMQUrl: ssl://192.168.1.82:61617?socket.verifyHostName=false
      activeMQInitQueue: INIT
      webServerForCloudProxyHost: localhost
      webServerForCloudProxyPort: 8080
      logLevel: DEBUG

    nvrWebServer:
      port: 4200 # Used to detect whether connected through Ethernet (for Wi-Fi set up)

    mail:
      smtp:
        configFile: /var/security-cam/smtp.json

    test:
      dataSource:
        dbCreate: update
        url: jdbc:h2:mem:testDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  production:
    grails:
      plugin:
        springsecurity:
          active: true
      cors:
        enabled: false

    dataSource:
      dbCreate: update
      url: jdbc:h2:/var/security-cam/db/prodDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
      properties:
        jmxEnabled: true
        initialSize: 5
        maxActive: 50
        minIdle: 5
        maxIdle: 25
        maxWait: 10000
        maxAge: 600000
        timeBetweenEvictionRunsMillis: 5000
        minEvictableIdleTimeMillis: 60000
        validationQuery: SELECT 1
        validationQueryTimeout: 3
        validationInterval: 15000
        testOnBorrow: true
        testWhileIdle: true
        testOnReturn: false
        jdbcInterceptors: ConnectionState
        defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

    camerasHomeDirectory: /var/security-cam
    recordingsHomeDirectory: /var/security-cam
    myipFileLocation: /var/security-cam/myip
    logLevel: DEBUG

    motion:
      configDir: /var/security-cam/motion/conf.d
      maskFileDir: /var/security-cam/motion
      recordingDir: /var/security-cam

    cloudProxy:
      enabled: false
      mqTrustStorePath: /etc/security-cam/client.ts
      mqKeyStorePath: /etc/security-cam/client.ks
      mqTrustStorePassword: CIdERVERiMPLetORThrONVAce
      mqKeyStorePassword: ExPEThINdAvAmpROteRCLEyfI
      mqUser: cloud
      mqPassword: inelESOLsiONgeOuShEFatIns
      productKeyPath: /etc/security-cam/prodKey
      cloudActiveMQUrl: ssl://192.168.1.82:61617?socket.verifyHostName=false
      activeMQInitQueue: INIT
      webServerForCloudProxyHost: localhost
      webServerForCloudProxyPort: 8088
      logLevel: DEBUG

    nvrWebServer:
      port: 443 # Used to detect whether connected through Ethernet (for Wi-Fi set up)

    mail:
      smtp:
        configFile: /var/security-cam/smtp.json
