@use '@angular/material' as mat;
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-component-typographies;
@include mat.core();

// Basic colours used in theme
$sec-cam-primary: mat.define-palette(mat.$light-green-palette);
$sec-cam-accent: mat.define-palette(mat.$blue-palette);
$sec-cam-warn: mat.define-palette(mat.$orange-palette);

// Colours used for buttons and alter boxes.
$sec-cam-danger: mat.define-palette(mat.$red-palette);
$sec-cam-secondary: mat.define-palette(mat.$green-palette, 600);
$sec-cam-light: mat.define-palette(mat.$yellow-palette, 400);
$sec-cam-grey: mat.define-palette(mat.$grey-palette);

// All the following are defined from the sec-cam- group above
$success-background: mat.get-color-from-palette($sec-cam-secondary, 100);
$danger-background: mat.get-color-from-palette($sec-cam-danger, 200);
$warn-background: mat.get-color-from-palette($sec-cam-warn, 100);

$success-colour: mat.get-contrast-color-from-palette($sec-cam-secondary, 400);
$danger-colour:  mat.get-contrast-color-from-palette($sec-cam-danger, 400);
$warn-colour: mat.get-contrast-color-from-palette($sec-cam-warn, 400);

$light-button-bkgnd: mat.get-color-from-palette($sec-cam-light, 400);
$danger-button-bkgnd: mat.get-color-from-palette($sec-cam-danger, A700);
$warn-button-bkgnd: mat.get-color-from-palette($sec-cam-warn,A400);
$secondary-button-bkgnd: mat.get-color-from-palette($sec-cam-accent, 900);
$default-button-bkgnd: mat.get-color-from-palette($sec-cam-grey, 500);

$light-button-colour: mat.get-contrast-color-from-palette($sec-cam-light, 900);
$danger-button-colour: mat.get-contrast-color-from-palette($sec-cam-danger, 900);
$warn-button-colour: mat.get-contrast-color-from-palette($sec-cam-warn, 400);
$secondary-button-colour: mat.get-contrast-color-from-palette($sec-cam-accent, 500);
$default-button-colour: mat.get-contrast-color-from-palette($sec-cam-grey, 500);

$theme: mat.define-dark-theme((
        color: (primary: $sec-cam-primary, secondary: $sec-cam-secondary, accent: $sec-cam-accent),
        density: (scale: -2),
));

$mat-theme-background: map-get($theme, background);
$background-colour: mat.get-color-from-palette($mat-theme-background, background);
$color: mat.get-contrast-color-from-palette($sec-cam-primary, 900);
@include mat.all-component-themes($theme);

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background-color: $background-colour;
  //  margin: 0;
}
html, body {
  height: 100%;
}

.global-colours {
  background-color: $background-colour;
  color: $color
}

@mixin alert {
 // position: relative;
  width: fit-content;
  padding: 3rem;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4rem;
  top: 5%;
  -webkit-box-shadow: 5px 5px 14px 5px #000000;
  box-shadow: 5px 5px 14px 5px #000000;
}

@mixin success {
  color: $success-colour;
  background-color: $success-background;
}

@mixin warning {
  color: $warn-colour;
  background-color: $warn-background;
}

@mixin danger {
  color: $danger-colour;
  background-color: $danger-background;
}

@mixin alert-embedded {
  @include alert;
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.success{
  @include success;
}

.warning {
  @include warning;
}

.danger {
  @include danger;
}

.alert-success {
  @include alert;
  @include success;
}

.alert-warning {
  @include alert;
  @include warning;
}

.alert-danger {
  @include alert;
  @include danger;
}

.alert-success-embedded {
  @include alert-embedded;
  @include success;
}

.alert-warning-embedded {
  @include alert-embedded;
  @include warning;
}

.alert-danger-embedded {
  @include alert-embedded;
  @include danger;
}

.mat-danger {
  background-color: $danger-button-bkgnd;
  color: $danger-button-colour;
}

.mat-secondary {
  background-color: $secondary-button-bkgnd;
  color: $secondary-button-colour;
}

.mat-light {
  background-color: $light-button-bkgnd;
  color: $light-button-colour;
}
.mat-light {
  background-color: $light-button-bkgnd;
  color: $light-button-colour;
}

.mat-warning {
  background-color: $warn-button-bkgnd;
  color: $warn-button-colour;
}

.mat-default {
  background-color: $default-button-bkgnd;
  color: $default-button-colour;
}

mat-card-content.wait-box {
  >mat-spinner {
    display: inline;
  }
  >span {
    position: relative;
    top: 0.4rem;
    left: 2rem;
    display: inline;
  }
}

mat-card.hide-background {
  background-color: transparent;
}

.mat-tooltip.tooltip {
  background-color: #e3ba4f;
  color: black;
  font-size: 12px;
}

.confirm-group {
  > span {
    background: #d9a11a;
    color: black;
    padding: 0.9rem;
    border-radius: 1rem;
  }

  > button {
    margin-left: 0.5rem;
  }
}
label.video-buttons {
  cursor: pointer;
  @media only screen and (max-width: 768px){
    :active {
      scale: 1.3;
      transition: scale 350ms linear
    }
    :not(:active) {
      scale: 1;
      transition-property: transform;
      transition: scale 350ms linear;
    }
  }
  @media only screen and (min-width: 768px) {
    :hover {
      scale: 1.3;
      transition: scale 350ms
    }

    :not(:hover) {
      scale: 1;
      transition-property: transform;
      transition: scale 350ms linear;
    }
  }
}

@mixin scrollbar-button {
  &:hover {
    background-color: #848484;
  }

  width: 20px;
  height: 20px;
  border-radius: 7px;
}

mat-card-content.scrollable-content {
  width: 100%;
  overflow: auto;

  &::-webkit-scrollbar-track {
    box-shadow: inset 0 0 5px lightgray;
    border-radius: 10px;
  }

  &::-webkit-scrollbar-thumb {
    box-shadow: inset 0 0 5px lightgray;
    background: #545454;

    &:hover {
      background: #848484;
    }

    border-radius: 10px;
  }

  //scrollbar-color: #545454 #C2D2E4;  // Firefox only, overrides webkit settings so not using it
  //scrollbar-width: auto;            // Firefox only, overrides webkit settings so not using it
  &::-webkit-scrollbar {
    width: 20px;
    height: 20px;
  }
  &::-webkit-scrollbar-button:single-button:vertical:increment {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="100 -900 960 960" width="24" fill="white"> <g><path d="M480-200 240-440l56-56 184 183 184-183 56 56-240 240Zm0-240L240-680l56-56 184 183 184-183 56 56-240 240Z"/></g></svg>');
    @include scrollbar-button
  }

  &::-webkit-scrollbar-button:single-button:vertical:decrement {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="100 -900 960 960" width="24" fill="white"> <g><path d="m296-224-56-56 240-240 240 240-56 56-184-183-184 183Zm0-240-56-56 240-240 240 240-56 56-184-183-184 183Z"/></g></svg>');
    @include scrollbar-button
  }

  &::-webkit-scrollbar-button:single-button:horizontal:decrement {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="100 -900 960 960" width="24" fill="white"> <g><path d="M440-240 200-480l240-240 56 56-183 184 183 184-56 56Zm264 0L464-480l240-240 56 56-183 184 183 184-56 56Z"/></g></svg>');
    @include scrollbar-button
  }

  &::-webkit-scrollbar-button:single-button:horizontal:increment {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="100 -900 960 960" width="24" fill="white"> <g><path d="M383-480 200-664l56-56 240 240-240 240-56-56 183-184Zm264 0L464-664l56-56 240 240-240 240-56-56 183-184Z"/></g></svg>');
    @include scrollbar-button
  }

  &::-webkit-scrollbar-corner {
    background-color: inherit;
  }
}


