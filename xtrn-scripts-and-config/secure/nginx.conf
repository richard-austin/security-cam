user www-data;
worker_processes 1;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

rtmp { 
# Camera 1
    server { 
        listen 1935;
 
        # Start the motion sensing process
        exec_static motion; 

        # Camera 1
        application live { 
            live on; 
	    
            exec_options on; 
            exec_static /home/www-data/ffmpeg_with_logging.sh rtsp://192.168.0.30:554/11 live porch;
            
            #record all;
            #record_path /home/www-data/hls;
            #record_unique on;
            #record_suffix -%d-%b-%y-%T.flv;
            #record_interval 2m; 

            # Run the script to create the video on demand files from the recording file, then delete the recording file and delete the oldest VOD files
            exec_record_done /home/www-data/processrecordings.sh $path $dirname/$basename_.m3u8 $dirname $basename; 
            
            interleave on;

            hls on; 
            hls_path /home/www-data/live/hls; 
            hls_fragment 15s; 

	   #dash on;
           #dash_path /tmp/dash;
           #dash_fragment 15s;

        recorder live_rec {
            record all manual;
            record_unique on;
            record_path /home/www-data/hls;
            record_suffix .flv;
            #record_interval 2m; 
            #record_max_size 2m;
            }  
        }

        # Camera 1 low resolution/bitrate
        application livelo {
            live on;

            exec_options on;
            exec_static /home/www-data/ffmpeg_with_logging.sh rtsp://192.168.0.30:554/12 livelo porch;
            interleave on;

            hls on;
            hls_path /home/www-data/live/hlslo;
            hls_fragment 15s;

         # Low res recording done by motion
        }

	# Camera 2
        application live2 {
            live on;

            exec_options on;
            exec_static /home/www-data/ffmpeg_with_logging.sh rtsp://192.168.0.34:554/11 live2 cam2;
            # Run the script to create the video on demand files from the recording file, then delete the recording file and delete the oldest VOD files
            exec_record_done /home/www-data/processrecordings.sh $path $dirname/$basename_.m3u8 $dirname $basename;

            interleave on;

            hls on;
            hls_path /home/www-data/live/hls2;
            hls_fragment 15s;

           #dash on;
           #dash_path /tmp/dash;
           #dash_fragment 15s;

        recorder live2_rec {
            record all manual;
            record_unique on;
            record_path /home/www-data/hls2;
            record_suffix .flv;
            #record_interval 2m;
            #record_max_size 2m;
            }
        }
 
	# Camera 2 low resolution
        application live2lo {
            live on;

            exec_options on;
            exec_static /home/www-data/ffmpeg_with_logging.sh rtsp://192.168.0.34:554/12 live2lo cam2;
            interleave on;

            hls on;
            hls_path /home/www-data/live/hls2lo;
            hls_fragment 15s;

            # Low res recording done by motion
        }

 	# Camera 3
         application live3 {
             live on;

             exec_options on;
             exec_static /home/www-data/ffmpeg_with_logging.sh rtsp://192.168.0.35:554/11 live3 cam3;
             # Run the script to create the video on demand files from the recording file, then delete the recording file and delete the oldest VOD files
             exec_record_done /home/www-data/processrecordings.sh $path $dirname/$basename_.m3u8 $dirname $basename;

             interleave on;

             hls on;
             hls_path /home/www-data/live/hls3;
             hls_fragment 15s;

         recorder live3_rec {
             record all manual;
             record_unique on;
             record_path /home/www-data/hls3;
             record_suffix .flv;
             #record_interval 2m;
             #record_max_size 2m;
             }
         }

 	# Camera 3 low resolution
         application live3lo {
             live on;

             exec_options on;
             exec_static /home/www-data/ffmpeg_with_logging.sh rtsp://192.168.0.35:554/12 live3lo cam3;
             interleave on;

             hls on;
             hls_path /home/www-data/live/hls3lo;
             hls_fragment 15s;
             # Low res recording done by motion
         }
     }
}

http { 
   map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

   default_type application/octet-stream;
   include /etc/nginx/mime.types;
 
    server {
       	listen 80 default_server;
       	server_name  _;
       	return 301 https://$host$request_uri;
    }

    server {
       listen 443 ssl; 
       server_tokens off;

        ssl_certificate security-cam.crt;
        ssl_certificate_key security-cam.key;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        absolute_redirect off;

       location /recording/ {
          auth_request /auth;
          auth_request_set $auth_status $upstream_status;
          add_header "Access-Control-Allow-Origin"  "*" always;
          autoindex off;
          alias /home/www-data/;
         # index index.html;
         # try_files $uri $uri/ =404;
       }

        location / {
             proxy_redirect http://localhost:8080 https://$http_host;
             proxy_pass http://localhost:8080/;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection $connection_upgrade;
             client_max_body_size 1G;
        }

    ## SSO for live streams
	location /live/ {
            auth_request /auth;
            auth_request_set $auth_status $upstream_status;

            add_header "Access-Control-Allow-Origin"  "*" always;
            root /home/www-data/;
        }

    # SSO for pension drawdown calculator
    location /dc/ {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        proxy_redirect http://localhost:8080/dc https://$http_host;
        proxy_pass http://localhost:8080/dc/;
    }

    # SSO for tomcat manager
    location /manager/ {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        proxy_redirect http://localhost:8080/manager https://$http_host;
        proxy_pass http://localhost:8080/manager/;
    }


       location = /auth {
                proxy_set_header Authorization "";
                proxy_pass http://localhost:8080/Utils/getTemperature;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
        }

    }
 

    # Listen for control commands to stop and start recordings
    server {
        listen localhost:8083; 
    
       location /control/ {
	   rtmp_control all;
       }
    }
	  
#    types {
#        application/vnd.apple.mpegurl m3u8;
#        video/mp2t ts;
#        text/html html;
#       # application/dash+xml mpd;
#    } 
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}

