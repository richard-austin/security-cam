user tomcat;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
   map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

   default_type application/octet-stream;
   include /etc/nginx/mime.types;

    server {
       	listen 80 default_server;
       	server_name  _;
       	return 301 https://$host$request_uri;
    }

    server {
       listen 443 ssl;
       server_tokens off;

        ssl_certificate security-cam.crt;
        ssl_certificate_key security-cam.key;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        absolute_redirect off;

       location /recording/ {
          auth_request /auth;
          auth_request_set $auth_status $upstream_status;
          error_page 500 =401 /error/401;
          autoindex off;
          alias /var/security-cam/;
       }

        location / {
             proxy_redirect http://localhost:8080 https://$http_host;
             proxy_pass http://localhost:8080/;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection $connection_upgrade;
             client_max_body_size 1G;
             proxy_read_timeout 300s;
             proxy_set_header X-Auth-Token "";
        }

	location /live/ {
            auth_request /auth;
            auth_request_set $auth_status $upstream_status;
            error_page 500 =401 /error/401;
            proxy_redirect http://localhost:8009/ https://$http_host;
            proxy_pass http://localhost:8009/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

	# For pension drawdown calculator
	location /dc/ {
           auth_request /auth;
           auth_request_set $auth_status $upstream_status;
           error_page 500 =401 /error/401;
           proxy_redirect http://localhost:8080/dc https://$http_host;
           proxy_pass http://localhost:8080/dc/;
	}

        # For tomcat manager (return error on attempted public access)
        location /manager/ {
            return 401;
        }

        location = /auth {
                proxy_set_header Authorization "";
                proxy_pass http://localhost:8080/Utils/getTemperature;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
        }

        location /error/401 {
            return 401;
       }
    }

    server {
       # This is accessed by the CloudProxy only and is plain http, so it's made inaccessible to external clients.
       listen localhost:8088;
       server_tokens off;

       absolute_redirect off;

       location /recording/ {
          auth_request /auth;
          auth_request_set $auth_status $upstream_status;
          error_page 500 =401 /error/401;
          autoindex off;
          alias /var/security-cam/;
       }

        location / {
             proxy_redirect http://localhost:8080 https://$http_host;
             proxy_pass http://localhost:8080/;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection $connection_upgrade;
             client_max_body_size 1G;
             proxy_read_timeout 300s;
        }

	location /live/ {
            auth_request /auth;
            auth_request_set $auth_status $upstream_status;
            error_page 500 =401 /error/401;
            proxy_redirect http://localhost:8009/ https://$http_host;
            proxy_pass http://localhost:8009/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

	# For pension drawdown calculator
	location /dc/ {
           auth_request /auth;
           auth_request_set $auth_status $upstream_status;
           error_page 500 =401 /error/401;
           proxy_redirect http://localhost:8080/dc https://$http_host;
           proxy_pass http://localhost:8080/dc/;
	}

        # For tomcat manager (return error on attempted public access)
        location /manager/ {
            return 401;
        }

        location = /auth {
                proxy_set_header Authorization "";
                proxy_pass http://localhost:8080/Utils/getTemperature;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
        }

        location /error/401 {
            return 401;
       }
    }

    server {
        listen 8084;

        # For tomcat manager local access (port 8084 not made public)
        location /manager/ {
           proxy_redirect http://localhost:8080/manager http://$http_host;
           proxy_pass http://localhost:8080/manager/;
        }
    }
}
