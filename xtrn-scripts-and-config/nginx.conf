user tomcat;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 4096;  # See https://support.plesk.com/hc/en-us/articles/12377240830999-High-CPU-usage-by-Nginx-is-shown-in-Health-Monitor
	# multi_accept on;
}

http {
   map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

   default_type application/octet-stream;
   include /etc/nginx/mime.types;

    server {
       	listen 80 default_server;
       	server_name  _;
       	return 301 https://$host$request_uri;
    }

    server {
       listen 443 ssl;
       server_tokens off;
# The compression in Tomcat seems to be better (smaller trasfer sizes than you get with this).
#         gzip on;
#         gzip_types      text/html text/css text/plain application/xml application/json text/javascript font/woff2 image/xicon application/octet-stream application/vnd.apple.mpegurl video/mp4;
#         gzip_proxied    no-cache no-store private expired auth;
#         gzip_min_length 1000;

        proxy_buffering  off;

        ssl_certificate security-cam.crt;
        ssl_certificate_key security-cam.key;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        absolute_redirect off;

           location /recording/ {
              auth_request /auth;
              auth_request_set $auth_status $upstream_status;
              error_page 500 =401 /error/401;
              autoindex off;
              alias /var/security-cam/;
           }

            location / {
                 proxy_redirect http://localhost:8080 https://$http_host;
                 proxy_pass http://localhost:8080/;
                 proxy_http_version 1.1;
                 proxy_set_header Upgrade $http_upgrade;
                 proxy_set_header Connection $connection_upgrade;
                 client_max_body_size 1G;
                 proxy_read_timeout 300s;
                 proxy_set_header X-Auth-Token "";
            }

            location /ws/ {
                    auth_request /auth;
                    auth_request_set $auth_status $upstream_status;
                    error_page 500 =401 /error/401;
                    proxy_redirect http://localhost:8085/ws https://$http_host;
                    proxy_pass http://localhost:8085/ws/;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
            }

             location /h/ {
                    auth_request /auth;
                    auth_request_set $auth_status $upstream_status;
                    error_page 500 =401 /error/401;
                    proxy_redirect http://localhost:8085/h https://$http_host;
                    proxy_pass http://localhost:8085/h/;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
            }

            # For pension drawdown calculator
            location /dc/ {
                   auth_request /auth;
                   auth_request_set $auth_status $upstream_status;
                   error_page 500 =401 /error/401;
                   proxy_redirect http://localhost:8080/dc https://$http_host;
                   proxy_pass http://localhost:8080/dc/;
            }

           # Prevent access to the non-authenticated checkForActiveMQCreds API call from outside the LAN
           location /user/checkForActiveMQCreds {
                   auth_request /auth;
                   auth_request_set $auth_status $upstream_status;
                   error_page 500 =401 /error/401;
                   proxy_redirect http://localhost:8080/user/checkForActiveMQCreds https://$http_host;
                   proxy_pass http://localhost:8080/user/checkForActiveMQCreds;
           }

           # Prevent access to the non-authenticated addOrUpdateActiveMQCreds API call from outside the LAN
           location /user/addOrUpdateActiveMQCreds {
                   auth_request /auth;
                   auth_request_set $auth_status $upstream_status;
                   error_page 500 =401 /error/401;
                   proxy_redirect http://localhost:8080/user/addOrUpdateActiveMQCreds https://$http_host;
                   proxy_pass http://localhost:8080/user/addOrUpdateActiveMQCreds;
           }

           # Prevent access to the non-authenticated createOrUpdateAccountLocally API call from outside the LAN
           location /user/createOrUpdateAccountLocally {
                   auth_request /auth;
                   auth_request_set $auth_status $upstream_status;
                   error_page 500 =401 /error/401;
                   proxy_redirect http://localhost:8080/user/createOrUpdateAccountLocally https://$http_host;
                   proxy_pass http://localhost:8080/user/createOrUpdateAccountLocally;
           }

          # Prevent access to the non-authenticated checkForAccountLocally API call from outside the LAN
           location /user/checkForAccountLocally {
                   auth_request /auth;
                   auth_request_set $auth_status $upstream_status;
                   error_page 500 =401 /error/401;
                   proxy_redirect http://localhost:8080/user/checkForAccountLocally https://$http_host;
                   proxy_pass http://localhost:8080/user/checkForAccountLocally;
           }

         # Prevent access to the non-authenticated setupSMTPClientLocally API call from outside the LAN
           location /utils/setupSMTPClientLocally {
                   auth_request /auth;
                   auth_request_set $auth_status $upstream_status;
                   error_page 500 =401 /error/401;
                   proxy_redirect http://localhost:8080/utils/setupSMTPClientLocally https://$http_host;
                   proxy_pass http://localhost:8080/utils/setupSMTPClientLocally;
           }

         # Prevent access to the non-authenticated getSMTPClientParamsLocally API call from outside the LAN
           location /utils/getSMTPClientParamsLocally {
                   auth_request /auth;
                   auth_request_set $auth_status $upstream_status;
                   error_page 500 =401 /error/401;
                   proxy_redirect http://localhost:8080/utils/getSMTPClientParamsLocally https://$http_host;
                   proxy_pass http://localhost:8080/utils/getSMTPClientParamsLocally;
           }

           # Prevent access to the non-authenticated create user account app from outside the LAN
           location /cua/ {
                   auth_request /auth;
                   auth_request_set $auth_status $upstream_status;
                   error_page 500 =401 /error/401;
                   proxy_redirect http://localhost:8080/cua https://$http_host;
                   proxy_pass http://localhost:8080/cua/;
           }

           # For tomcat manager (return error on attempted public access)
           location /manager/ {
               return 401;
           }

           location = /auth {
                   proxy_set_header Authorization "";
                   proxy_pass http://localhost:8080/utils/getTemperature;
                   proxy_pass_request_body off;
                   proxy_set_header Content-Length "";
           }

           location /error/401 {
               return 401;
           }
    }

   # Server for cam admin hosting service
    server {
       listen 83;
       server_tokens off;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        absolute_redirect off;

        location / {
           # redirect all HTTP traffic to localhost:8446
           proxy_pass http://localhost:8446/;
           proxy_redirect http://localhost:8446 https://$http_host;
           proxy_hide_header X-Frame-Options;
           proxy_hide_header X-Xss-Protection;
           proxy_set_header Host $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          # WebSocket support
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
       }
    }

    server {
       # This is accessed by the CloudProxy only and is plain http, so it's made inaccessible to external clients.
       listen localhost:8088;
       server_tokens off;

       absolute_redirect off;

       location /recording/ {
          auth_request /auth;
          auth_request_set $auth_status $upstream_status;
          error_page 500 =401 /error/401;
          autoindex off;
          alias /var/security-cam/;
       }

        location / {
             proxy_redirect http://localhost:8080 https://$http_host;
             proxy_pass http://localhost:8080/;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection $connection_upgrade;
             client_max_body_size 1G;
             proxy_read_timeout 300s;
        }

        location /ws/ {
                auth_request /auth;
                auth_request_set $auth_status $upstream_status;
                error_page 500 =401 /error/401;
                proxy_redirect http://localhost:8085/ws https://$http_host;
                proxy_pass http://localhost:8085/ws/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
            }

        location /h/ {
                auth_request /auth;
                auth_request_set $auth_status $upstream_status;
                error_page 500 =401 /error/401;
                proxy_redirect http://localhost:8085/h https://$http_host;
                proxy_pass http://localhost:8085/h/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
            }
        # For pension drawdown calculator
        location /dc/ {
               auth_request /auth;
               auth_request_set $auth_status $upstream_status;
               error_page 500 =401 /error/401;
               proxy_redirect http://localhost:8080/dc https://$http_host;
               proxy_pass http://localhost:8080/dc/;
        }

        # Prevent access to the non-authenticated createOrUpdateAccountLocally API call from outside the LAN
        location /utils/createOrUpdateAccountLocally {
            return 404;
        }

        # For tomcat manager (return error on attempted public access)
        location /manager/ {
            return 401;
        }

        location = /auth {
                proxy_set_header Authorization "";
                proxy_pass http://localhost:8080/utils/getTemperature;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
        }

        location /error/401 {
            return 401;
        }
    }

    server {
        listen 8084;

        # For tomcat manager local access (port 8084 not made public)
        location /manager/ {
           proxy_redirect http://localhost:8080/manager http://$http_host;
           proxy_pass http://localhost:8080/manager/;
        }
    }
}
