user www-data;
worker_processes 1;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
#load_module "modules/ngx_rtmp_module.so";

events {
	worker_connections 768;
	# multi_accept on;
}

# The rtmp server is no longer used as the node media server is used in its place.security
#  It is retained for now simply to start motion, the node media server and the ffmpeg processes
rtmp {
    server { 
        listen 1936;
 
        # Start the motion sensing process
            exec_options on;
            exec_static node /etc/security-cam/nms/app.js;
            exec_static motion;
            exec_static /etc/security-cam/ffmpeg_with_logging.sh rtsp://192.168.0.30:554/11 live porch;
            exec_static /etc/security-cam/ffmpeg_with_logging.sh rtsp://192.168.0.30:554/12 livelo porch;
            exec_static /etc/security-cam/ffmpeg_with_logging.sh rtsp://192.168.0.34:554/11 live2 cam2;
            exec_static /etc/security-cam/ffmpeg_with_logging.sh rtsp://192.168.0.34:554/12 live2lo cam2;
            exec_static /etc/security-cam/ffmpeg_with_logging.sh rtsp://192.168.0.35:554/11 live3 cam3;
            exec_static /etc/security-cam/ffmpeg_with_logging.sh rtsp://192.168.0.35:554/12 live3lo cam3;
     }
}

http { 
   map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

   default_type application/octet-stream;
   include /etc/nginx/mime.types;
 
    server {
       	listen 80 default_server;
       	server_name  _;
       	return 301 https://$host$request_uri;
    }

    server {
       listen 443 ssl; 
       server_tokens off;

        ssl_certificate security-cam.crt;
        ssl_certificate_key security-cam.key;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        absolute_redirect off;

       location /recording/ {
          auth_request /auth;
          auth_request_set $auth_status $upstream_status;
          error_page 500 =401 /error/401;
          autoindex off;
          alias /home/www-data/;
       }

        location / {
             proxy_redirect http://localhost:8080 https://$http_host;
             proxy_pass http://localhost:8080/;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection $connection_upgrade;
             client_max_body_size 1G;
        }
       
	location /live/ {
            auth_request /auth;
            auth_request_set $auth_status $upstream_status;
            error_page 500 =401 /error/401;
            proxy_redirect http://localhost:8009/ https://$http_host;
            proxy_pass http://localhost:8009/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

	# For pension drawdown calculator
	location /dc/ {
           auth_request /auth;
           auth_request_set $auth_status $upstream_status;
           error_page 500 =401 /error/401;
           proxy_redirect http://localhost:8080/dc https://$http_host;
           proxy_pass http://localhost:8080/dc/;
	}

        # For tomcat manager (return error on attempyed public access)
        location /manager/ {
            return 401;
        }

        location = /auth {
                proxy_set_header Authorization "";
                proxy_pass http://localhost:8080/Utils/getTemperature;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
        }

        location /error/401 {
            return 401;
       }
    }

    # Listen for control commands to stop and start recordings
    server {
        listen localhost:8083; 
    
       location /control/ {
	   rtmp_control all;
       }
    }

    server {
        listen 8084;

        # For tomcat manager local access (port 8084 not made public)
        location /manager/ {
           proxy_redirect http://localhost:8080/manager http://$http_host;
           proxy_pass http://localhost:8080/manager/;
        }
    }
}
